name: Release
on:
  push:
    branches:
      - CI-testing
    tags:
      # - 'v[0-9]+.[0-9]+.[0-9]+'
      - "*"

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{  github.ref_name }}
          release_name: ${{  github.ref_name }}
          draft: true
          prerelease: false

  build-release:
    needs: [create-release]
    name: build-release
    env:
      CIBW_ARCHS_MACOS: x86_64 arm64
    runs-on: macos-latest
    strategy:
      matrix:
        python-version:
          [
            "cp38-macosx_universal2",
            "cp39-macosx_universal2",
            "cp310-macosx_universal2",
            "cp311-macosx_universal2",
          ]
    steps:
      - name: Create artifacts directory
        shell: bash
        run: mkdir artifacts
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          architecture: x64
      - name: Check Python version
        run: |
          python --version
      - name: Install dependencies
        run: |
          pip install cibuildwheel
      - name: Build wheel
        run: python -m cibuildwheel --output-dir dist

      - name: Package
        run: |
          mkdir -p pasteboard_test
          cp -r dist/* pasteboard_test
          zip -9 -r pasteboard_test_${{ matrix.python-version }}.zip pasteboard_test
      - name: Upload
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: pasteboard_test_${{ matrix.python-version }}.zip
          asset_name: pasteboard_test_${{ matrix.python-version }}.zip
          asset_content_type: application/zip

  # publish-release:
  #   name: publish-release
  #   needs: ['build-release']
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v2
  #   - name: Set up Python 3.9
  #     uses: actions/setup-python@v1
  #     with:
  #       python-version: 3.9
  #   - name: Install dependencies
  #     run: pip install poetry
  #   - name: Get release download URL
  #     uses: actions/download-artifact@v2
  #     with:
  #       name: artifacts
  #       path: artifacts

  #   - name: Create dist directory
  #     shell: bash
  #     run: mkdir dist
  #   - name: Copy wheels
  #     shell: bash
  #     run: cp artifacts/*.whl dist/
  #   - name: Copy tar.gz
  #     shell: bash
  #     run: cp artifacts/*.tar.gz dist/
  #   - name: List all artifacts
  #     shell: bash
  #     run: ls -l dist/

  #   - name: Get the branch and tag
  #     id: info
  #     shell: bash
  #     run: |
  #       branch="${GITHUB_REF#refs/heads/}"
  #       echo "$branch"
  #       if [[ "$branch" == "workflow_release" ]]; then
  #         echo "::set-output name=version::TEST-0.0.0"
  #         echo "::set-output name=dry_run::--dry-run"
  #       else
  #         echo "::set-output name=version::${GITHUB_REF#refs/tags/}"
  #         echo "::set-output name=dry_run::"
  #       fi
  #       echo "::set-output name=date::$(env TZ=':America/Los_Angeles' date +'%Y-%m-%d')"

  #   - name: Create release
  #     shell: bash
  #     run: |
  #       set -x
  #       hub release create \
  #         --draft \
  #         --message "${{ steps.info.outputs.version }} (${{ steps.info.outputs.date }})" \
  #         $(find ./dist -type f -printf "-a %p ") \
  #         "${{ steps.info.outputs.version }}"
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #   - name: Publish
  #     run: |
  #       poetry config pypi-token.pypi "${{ secrets.PYPI_TOKEN }}"
  #       poetry publish ${{ steps.info.outputs.dry_run }}
